# Configuration in this file is overridden by an external file
# if any of these exist:
# [$UAA_CONFIG_URL, $UAA_CONFIG_PATH/uaa.yml, $CLOUD_FOUNDRY_CONFIG_PATH/uaa.yml]

#spring_profiles: mysql,default
#spring_profiles: postgresql,default
#spring_profiles: ldap,default,hsqldb
#spring_profiles: saml
#spring_profiles: keystone,default,hsqldb

#database:
#  driverClassName: org.postgresql.Driver
#  url: jdbc:postgresql:uaa
#  username: pivotal
#  password:
#  maxactive: 100
#  maxidle: 10
#  removeabandoned: false
#  logabandoned: true
#  abandonedtimeout: 300
#  evictionintervalms: 15000
#  caseinsensitive: false

#note - this is not the place to set these properties
# - they are just here for documentation purposes
#database.driverClassName: org.postgresql.Driver
#database.url: jdbc:postgresql:uaa
#database.username: root
#database.password: changeme

#postgresql commands that were run were
#create database uaa;
#create user root with superuser password 'changeme';

#database:
#  driverClassName: org.mariadb.jdbc.Driver
#  url: jdbc:mysql://localhost:3306/uaa
#  username: root
#  password:

#mysql commands that were run
#create database uaa;
#SET PASSWORD FOR 'root'@'localhost' = PASSWORD('changeme');
#SET PASSWORD FOR 'root'@'127.0.0.1' = PASSWORD('changeme');

# A comprehensive list of hostnames routed to the UAA default zone. The UAA uses this to resolve subdomains for Identity Zones.
# Defaults to 'localhost'
#zones:
#  internal:
#    hostnames:
#      - host1.domain.com
#      - host2
#      - testzone3.localhost
#      - testzone4.localhost

#authentication:
#  policy:
#    lockoutAfterFailures: 5
#    countFailuresWithinSeconds: 3600
#    lockoutPeriodSeconds: 600

# Set this property to true for disabling authentication via the internal IDP. Defaults to false.
#disableInternalAuth: false

# Set this property to true for disabling access to user management endpoints and controllers. Defaults to false.
#disableInternalUserManagement: true

#keystone:
#  authentication:
#    url: http://localhost:35357/v2.0/tokens
#    url: http://localhost:5000/v3/auth/tokens

#ldap:
#  profile:
#    file: ldap/ldap-simple-bind.xml
#  base:
#    url: 'ldaps://192.168.3.39:10636/'
#    userDnPattern: 'cn={0},ou=Users,dc=test,dc=com;cn={0},ou=OtherUsers,dc=example,dc=com'
#  ssl:
#    skipverification: false
#    sslCertificate: ! '-----BEGIN CERTIFICATE-----
#    MIIBfTCCAScCBgFDfaC2yzANBgkqhkiG9w0BAQUFADBCMQswCQYDVQQGEwJVUzEMMAoGA1UEChMD
#    QVNGMRIwEAYDVQQLEwlEaXJlY3RvcnkxETAPBgNVBAMTCEFwYWNoZURTMB4XDTE0MDExMDE5Mjg0
#    MVoXDTE1MDExMDE5Mjg0MVowTDELMAkGA1UEBhMCVVMxDDAKBgNVBAoTA0FTRjESMBAGA1UECxMJ
#    RGlyZWN0b3J5MRswGQYDVQQDExJmaGFuaWstd29ya3N0YXRpb24wXDANBgkqhkiG9w0BAQEFAANL
#    ADBIAkEAuA6Nmto6NFCCJ+CwsBnT2cvMxuYgf26iZ3ckIpLhs2V4ZJ4PFinR6JZUsVnRp0RbYoV5
#    iW6F91XDTVtAMtDTJwIDAQABMA0GCSqGSIb3DQEBBQUAA0EATFGpEIprKYcnc+JuNcSQ8v2P2J7e
#    lQ23NhTaljASF0g8AZ7SZEItU8JFYqf/KnNJ7FPwo4LbMbr7Zg6BRKBvnQ==
#    -----END CERTIFICATE-----'
#    sslCertificateAlias: ldaps
#  externalGroupsWhitelist:
#    - admin
#    - user
#  emailDomain:
#    - example.com
#  attributeMappings:
#    given_name: givenname
#    family_name: sn
#    phone_number: telephonenumber
#    user.attribute.employeeCostCenter: costCenter
#    user.attribute.terribleBosses: uaaManager
#  providerDescription: 'Human readable description of this provider'


#ldap:
#  profile:
#    file: ldap/ldap-search-and-bind.xml
#  base:
#    url: 'ldap://localhost:389/'
#    userDn: 'cn=admin,dc=test,dc=com'
#    password: 'password'
#    searchBase: 'dc=test,dc=com'
#    searchFilter: 'cn={0}'
#    referral: follow
#  groups:
#      file: 'ldap/ldap-groups-map-to-scopes.xml'
#      searchBase: 'dc=test,dc=com'
#      groupSearchFilter: 'member={0}'
#      searchSubtree: true
#      maxSearchDepth: 10
#      autoAdd: true
#      ignorePartialResultException: true

#ldap:
#  profile:
#    file: ldap/ldap-search-and-compare.xml
#  base:
#    url: 'ldap://localhost:10389/'
#    userDn: 'cn=admin,dc=test,dc=com'
#    password: 'password'
#    searchBase: ''
#    searchFilter: 'cn={0}'
#    passwordAttributeName: userPassword
#    passwordEncoder: org.cloudfoundry.identity.uaa.login.ldap.DynamicPasswordComparator
#    localPasswordCompare: true

#password:
#  policy:
#    minLength: 0
#    maxLength: 128
#    requireUpperCaseCharacter: 0
#    requireLowercaseCharacter: 0
#    requireDigit: 0
#    requireSpecialCharacter: 0
#    expirePasswordInMonths: 0

scim:
  groups:
    zones.read: Read identity zones
    zones.write: Create and update identity zones
    idps.read: Retrieve identity providers
    idps.write: Create and update identity providers
    clients.admin: Create, modify and delete OAuth clients
    clients.write: Create and modify OAuth clients
    clients.read: Read information about OAuth clients
    clients.secret: Change the password of an OAuth client
    scim.write: Create, modify and delete SCIM entities, i.e. users and groups
    scim.read: Read all SCIM entities, i.e. users and groups
    scim.create: Create users
    scim.userids: Read user IDs and retrieve users by ID
    scim.zones: Control a user's ability to manage a zone
    scim.invite: Send invitations to users
    password.write: Change your password
    oauth.approval: Manage approved scopes
    oauth.login: Authenticate users outside of the UAA
    openid: Access profile information, i.e. email, first and last name, and phone number
    groups.update: Update group information and memberships
    uaa.user: Act as a user in the UAA
    uaa.resource: Serve resources protected by the UAA
    uaa.admin: Act as an administrator throughout the UAA
    uaa.none: Forbid acting as a user
  users:
    - anon|umkay!|anon_ww@mailinator.com|Anonymous|User|uaa.user

oauth:
  user:
    authorities:
      - openid
      - scim.me
      - cloud_controller.read
      - cloud_controller.write
      - cloud_controller_service_permissions.read
      - password.write
      - scim.userids
      - uaa.user
      - approvals.me
      - oauth.approvals
      - profile
      - roles
      - user_attributes
  clients:
    mukapi:
      authorized-grant-types: refresh_token,client_credentials,authorization_code
      scope: openid
      authorities: password.write,scim.userids,uaa.resource,scim.read
      id: mukapi
      secret: umkay!
      resource-ids: none
      redirect-uri: http://localhost:8082/proxied/api/admin/login

# Default token signing key. Each installation MUST provide a unique key
# in order for tokens to be usable only on that installation.
jwt:
  token:
    verification-key: |
       -----BEGIN PUBLIC KEY-----
       MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCvK4fdeq116jNqiT84pYkY9d0o
       MfhuPe53FUkXw0nLzlNWVtqrMvvNHzbmjlAJKXbRgEmk/UhWCnahqpI5klUReMLR
       uIHujewQ3OCkPZKUNwzrbppniTqlKknQc5xMmiP/677xCgJmfoKZmNcTgd7ofx+7
       N0BN2R1ctSLcajO62wIDAQAB
       -----END PUBLIC KEY-----
    signing-key: |
        -----BEGIN RSA PRIVATE KEY-----
        MIICXgIBAAKBgQCvK4fdeq116jNqiT84pYkY9d0oMfhuPe53FUkXw0nLzlNWVtqr
        MvvNHzbmjlAJKXbRgEmk/UhWCnahqpI5klUReMLRuIHujewQ3OCkPZKUNwzrbppn
        iTqlKknQc5xMmiP/677xCgJmfoKZmNcTgd7ofx+7N0BN2R1ctSLcajO62wIDAQAB
        AoGBAIaHjATQ3r8cavh7B47dsvj0ejEQj5c7ARV7x3L0jIx1nRNGCRJKSZAzVNqk
        mVsv+QzU1bpcu105E/r9IOgONj26Hcbk7w+lKDSVkXzUsqPRLoy/OrgoWEniilM6
        P9TxsvYiHRo0je3fhH4W4KBE/E/sX2Dme7OfYT+I2+OnjKXhAkEA6O1uq8GItO+8
        WEklIZOMrTXLyFiZSZXPXajT96SZ+xy9vA/RqaIpc55J50C+zcvmNuGtt8LVh+Tq
        QAcuR1w7zQJBAMCFfMCCXP8XqjOg/EKX25gmrsmEeqLDE6Iq/0TBms9T4NnKsDQV
        mdlCMeRAqa0ILkjloJUNexvz/fOoCYIIuUcCQQDQkxP/7wx4YRg5wj3ipBpbXAm/
        vD5/GwwWJUCxx44uw1zPEyc+jDwsEPjCgEKbS9M5H7sMCwZkasKsVQHG2rudAkAI
        kCdrXKEMS54ra7ass5p12wqdNgJKaQjfhrAR+9aJ8D4pEcXimy9bpYEYmPOzGZEN
        dwE8f/wA00pxYwEBQqgTAkEA12gIxtBzXUEWHP35amy9pccFiUppErwC1Lc0pnzP
        oEOzf/tQIBDXeMJ+7Zn1nMkgH7pyYgCXQXZcF5Ke3FkTiQ==
        -----END RSA PRIVATE KEY-----
    claims:
      exclude:
        - authorities
    policy:
      # Will override global validity policies for the default zone only.
      accessTokenValiditySeconds: 3600
      refreshTokenValiditySeconds: 3600
      keys:
        key-id-1:
          signingKey: |
            -----BEGIN RSA PRIVATE KEY-----
            MIICXgIBAAKBgQCvK4fdeq116jNqiT84pYkY9d0oMfhuPe53FUkXw0nLzlNWVtqr
            MvvNHzbmjlAJKXbRgEmk/UhWCnahqpI5klUReMLRuIHujewQ3OCkPZKUNwzrbppn
            iTqlKknQc5xMmiP/677xCgJmfoKZmNcTgd7ofx+7N0BN2R1ctSLcajO62wIDAQAB
            AoGBAIaHjATQ3r8cavh7B47dsvj0ejEQj5c7ARV7x3L0jIx1nRNGCRJKSZAzVNqk
            mVsv+QzU1bpcu105E/r9IOgONj26Hcbk7w+lKDSVkXzUsqPRLoy/OrgoWEniilM6
            P9TxsvYiHRo0je3fhH4W4KBE/E/sX2Dme7OfYT+I2+OnjKXhAkEA6O1uq8GItO+8
            WEklIZOMrTXLyFiZSZXPXajT96SZ+xy9vA/RqaIpc55J50C+zcvmNuGtt8LVh+Tq
            QAcuR1w7zQJBAMCFfMCCXP8XqjOg/EKX25gmrsmEeqLDE6Iq/0TBms9T4NnKsDQV
            mdlCMeRAqa0ILkjloJUNexvz/fOoCYIIuUcCQQDQkxP/7wx4YRg5wj3ipBpbXAm/
            vD5/GwwWJUCxx44uw1zPEyc+jDwsEPjCgEKbS9M5H7sMCwZkasKsVQHG2rudAkAI
            kCdrXKEMS54ra7ass5p12wqdNgJKaQjfhrAR+9aJ8D4pEcXimy9bpYEYmPOzGZEN
            dwE8f/wA00pxYwEBQqgTAkEA12gIxtBzXUEWHP35amy9pccFiUppErwC1Lc0pnzP
            oEOzf/tQIBDXeMJ+7Zn1nMkgH7pyYgCXQXZcF5Ke3FkTiQ==
            -----END RSA PRIVATE KEY-----
          verificationKey: |
            -----BEGIN PUBLIC KEY-----
            MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCvK4fdeq116jNqiT84pYkY9d0o
            MfhuPe53FUkXw0nLzlNWVtqrMvvNHzbmjlAJKXbRgEmk/UhWCnahqpI5klUReMLR
            uIHujewQ3OCkPZKUNwzrbppniTqlKknQc5xMmiP/677xCgJmfoKZmNcTgd7ofx+7
            N0BN2R1ctSLcajO62wIDAQAB
            -----END PUBLIC KEY-----
      # Sets the default validity for all zones
      global:
        accessTokenValiditySeconds: 3600
        refreshTokenValiditySeconds: 3600

# Configure whitelist for allowing cross-origin XMLHttpRequest requests.
#cors:
#  xhr:
#    allowed:
#      headers:
#        - Accept
#        - Authorization
#        - Content-Type
#        - X-Requested-With
#      origin:
#        - ^localhost$
#        - ^.*\.localhost$
#      uris:
#        - ^/uaa/userinfo$
#        - ^/uaa/logout\.do$
#      methods:
#        - GET
#        - OPTIONS
#  default:
#    allowed:
#      headers:
#        - Accept
#        - Authorization
#        - Content-Type
#        - X-Requested-With
#      origin:
#        - ^localhost$
#        - ^.*\.localhost$
#      uris:
#        - ^/uaa/userinfo$
#        - ^/uaa/logout\.do$
#      methods:
#        - GET
#        - PUT
#        - POST
#        - DELETE

login:
  # Enable create account and forgot password links on the Login Server (enabled by default)
  #selfServiceLinksEnabled: true
  #base URL that the login server can be reached at
#  oauth:
#    providers:
#      my-oauth-provider:
#        type: oauth2.0
#        authUrl: http://my-auth.com
#        tokenUrl: http://my-token.com
#        tokenKey: my-token-key
#        tokenKeyUrl:
#        issuer: token issuer (iss)
#        scopes:
#          - openid
#          - scope.example
#        emailDomain:
#          - example.com
#        linkText: My Oauth Provider
#        showLinkText: true
#        addShadowUserOnLogin: false
#        relyingPartyId: uaa
#        relyingPartySecret: secret
#        attributeMappings:
#          given_name: firstName
#          family_name: lastname
#          user_name: username
#          external_groups:
#            - scopes_example_group
#            - roles_example_group
  url: http://localhost:8080/uaa
#  idpDiscoveryEnabled: true
#  accountChooserEnabled: true

  # SAML Key Configuration
  # The location and credentials of the certificate for this SP
  # See README.md for details on how to create this.
  serviceProviderKey: |
    -----BEGIN RSA PRIVATE KEY-----
    MIICXgIBAAKBgQCvK4fdeq116jNqiT84pYkY9d0oMfhuPe53FUkXw0nLzlNWVtqr
    MvvNHzbmjlAJKXbRgEmk/UhWCnahqpI5klUReMLRuIHujewQ3OCkPZKUNwzrbppn
    iTqlKknQc5xMmiP/677xCgJmfoKZmNcTgd7ofx+7N0BN2R1ctSLcajO62wIDAQAB
    AoGBAIaHjATQ3r8cavh7B47dsvj0ejEQj5c7ARV7x3L0jIx1nRNGCRJKSZAzVNqk
    mVsv+QzU1bpcu105E/r9IOgONj26Hcbk7w+lKDSVkXzUsqPRLoy/OrgoWEniilM6
    P9TxsvYiHRo0je3fhH4W4KBE/E/sX2Dme7OfYT+I2+OnjKXhAkEA6O1uq8GItO+8
    WEklIZOMrTXLyFiZSZXPXajT96SZ+xy9vA/RqaIpc55J50C+zcvmNuGtt8LVh+Tq
    QAcuR1w7zQJBAMCFfMCCXP8XqjOg/EKX25gmrsmEeqLDE6Iq/0TBms9T4NnKsDQV
    mdlCMeRAqa0ILkjloJUNexvz/fOoCYIIuUcCQQDQkxP/7wx4YRg5wj3ipBpbXAm/
    vD5/GwwWJUCxx44uw1zPEyc+jDwsEPjCgEKbS9M5H7sMCwZkasKsVQHG2rudAkAI
    kCdrXKEMS54ra7ass5p12wqdNgJKaQjfhrAR+9aJ8D4pEcXimy9bpYEYmPOzGZEN
    dwE8f/wA00pxYwEBQqgTAkEA12gIxtBzXUEWHP35amy9pccFiUppErwC1Lc0pnzP
    oEOzf/tQIBDXeMJ+7Zn1nMkgH7pyYgCXQXZcF5Ke3FkTiQ==
    -----END RSA PRIVATE KEY-----
  serviceProviderKeyPassword:
  serviceProviderCertificate: |
    -----BEGIN CERTIFICATE-----
    MIIC6jCCAlOgAwIBAgIJAM9HDvxuQwKPMA0GCSqGSIb3DQEBCwUAMIGNMQswCQYD
    VQQGEwJVUzELMAkGA1UECAwCVFgxDzANBgNVBAcMBkF1c3RpbjEVMBMGA1UECgwM
    bWl6dXVlbmlrYXplMR8wHQYDVQQDDBYqLndpbmR1cG9udGhld2F0ZXIuY29tMSgw
    JgYJKoZIhvcNAQkBFhlpbmZvQHdpbmR1cG9udGhld2F0ZXIuY29tMB4XDTE3MDUw
    NzAxNDcyMloXDTE4MDUwNzAxNDcyMlowgY0xCzAJBgNVBAYTAlVTMQswCQYDVQQI
    DAJUWDEPMA0GA1UEBwwGQXVzdGluMRUwEwYDVQQKDAxtaXp1dWVuaWthemUxHzAd
    BgNVBAMMFioud2luZHVwb250aGV3YXRlci5jb20xKDAmBgkqhkiG9w0BCQEWGWlu
    Zm9Ad2luZHVwb250aGV3YXRlci5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJ
    AoGBAK8rh916rXXqM2qJPziliRj13Sgx+G497ncVSRfDScvOU1ZW2qsy+80fNuaO
    UAkpdtGASaT9SFYKdqGqkjmSVRF4wtG4ge6N7BDc4KQ9kpQ3DOtummeJOqUqSdBz
    nEyaI//rvvEKAmZ+gpmY1xOB3uh/H7s3QE3ZHVy1ItxqM7rbAgMBAAGjUDBOMB0G
    A1UdDgQWBBS38DhYbz9jc8BbCtsYzDHtEDSdoDAfBgNVHSMEGDAWgBS38DhYbz9j
    c8BbCtsYzDHtEDSdoDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUAA4GBAF9z
    Sfl0AFsjGBskyaoa2lZmei3tbHToZ/l4o7YKMygcBEJud4oWRObtjajZdPU6rU0s
    vxe0QkugasSPKx4F+o0untW/RAuzqs5n3gAe7sUAurYKl6lMxPddN/flC+i78k4J
    DJ5kBHL2Fr0NsGzcskRxkmjkcGSdHc5dqcEpvqlV
    -----END CERTIFICATE-----

